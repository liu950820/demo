server:
    port: 8080
spring:
    profiles:
       active: dev
    jpa:
        show-sql: true #打印运行时sql语句到控制台
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
        default-property-inclusion: NON_NULL
    rabbitmq:
        addresses: 10.211.55.19:5672
        username: guest
        password: guest
        virtual-host: /
        connection-timeout: 15000
        publisher-confirms: true  #消息确认模式，异步的等待消息的确认
        publisher-returns: true
        template:
           mandatory: true
        ## 消费端配置
        listener:
            simple:
               concurrency: 5
               ## manual:手动 ack（确认）  AUTO:自动
               acknowledge-mode: manual
               #最大并发
               max-concurrency: 10
               #限流，海量数据一起过来的话，服务器抗不过来。
               prefetch: 1
    datasource:
        name: mysql_test
        type: com.alibaba.druid.pool.DruidDataSource
        #druid相关配置
        druid:
            # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
            filters: stat
            driver-class-name: com.mysql.jdbc.Driver
            #基本属性
            url: jdbc:mysql://127.0.0.1:3306/springboot?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
            username: root
            password: root
            #配置初始化大小/最小/最大
            initial-size: 1
            min-idle: 1
            max-active: 20
            #获取连接等待超时时间
            max-wait: 60000
            #间隔多久进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            time-between-eviction-runs-millis: 60000
            #一个连接在池中最小生存的时间
            min-evictable-idle-time-millis: 300000

            #用来检测连接是否有效的sql，要求是一个查询语句。
            #如果validationQuery为null，testOnBorrow、testOnReturn、
            #testWhileIdle都不会其作用
            validation-query: SELECT 'x'
            test-while-idle: true
            test-on-borrow: false
            test-on-return: false
            #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
            pool-prepared-statements: false
            max-pool-prepared-statement-per-connection-size: 20
mybatis:
    mapper-locations: classpath:mapper/*.xml
    type-aliases-package: com.web.model
    config-location: classpath:mybatis-config.xml
#=========== 日志配置·简易（spring boot已经集成logback日志）=========
#controller层日志 WARN级别输出
logging:
    level:
        com.web.controller: WARN
        com.web.dao: DEBUG #mapper层 sql日志 DEBUG级别输出
#==================== 日志配合·标准  ============================
